package main.selfLearning;

public class Example1 {

    public static void main(String[] args) {
        //数据类型 变量名;
        //变量名 = 变量值;
        byte b; //告诉计算机在栈上开辟一块1个字节大小的空间，并将这块空间命名为b
        b = 10; //告诉计算机将整数10放入开辟好的空间b中
        //数据类型 变量名 = 变量值;
        //告诉计算机在栈上开辟一块2个字节大小的空间，并将这块空间命名为s，
        //然后将整数5放入这块空间中
        short s = 5;
        //告诉计算机在栈上开辟一块4个字节大小的空间，并将这块空间命名为age
        //然后将整数20放入这块空间中
        int age = 20;
        // 将整数25放入名为age的内存空间中
        age = 25;
        long time = 20210312;
//在Java中，浮点数默认是双精度浮点数。如果要给一个单精度浮点数变量赋值，需要在变量值
//后面加上一个f或者F，表示是单精度浮点数
        float f = 10.0F;
        double score = 65.5;
//在Java的布尔类型变量，编译完成后就不存在了。因为Java在C++基础上开发的，而C++中使用
//0 与 非0表示假和真。而JVM是执行Java程序的场所，在JVM规范中有明确说明，单个boolean
//类型的变量，在编译的过程中会被翻译为int类型的变量，此时占用4个字节的空间。对于boolean
//类型的数组，在翻译的过程中会被翻译为byte类型的数组，此时每个变量占用1个字节的空间。
        boolean isNice = true;
        //char类型变量能否存在汉字？
//能。Java采用的是Unicode编码，而Unicode编码中收录的汉字占用的是2个字节，我们的char类型
//变量也是占用2个字节的空间，因此，在Unicode编码中收录的汉字可以使用char类型变量存储。而
//在Unicode编码中未收录的汉字不一定能够使用char类型变量存储。
        char sex = '男';
    }
}
